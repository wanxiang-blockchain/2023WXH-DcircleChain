
package db

// ---- auto generated by builder.go, NOT modify this file ----

import (
  field "github.com/xpwu/go-db-mongo/mongodb/field"
)

type AccountDocument0FieldUpdaterF struct {
  *baseAccountDocument0Field
  *field.StructUpdaterF
}

func (s *AccountDocument0FieldUpdaterF) FullName() string {
  return s.name
}

type AccountDocument0FieldFilterF struct {
  *baseAccountDocument0Field
  *field.StructFilterF
}

func (s *AccountDocument0FieldFilterF) FullName() string {
  return s.name
}

type AccountDocument0Field struct {
  *baseAccountDocument0Field
  AccountDocument0FieldUpdaterF  *AccountDocument0FieldUpdaterF
  AccountDocument0FieldFilterF   *AccountDocument0FieldFilterF
}

func NewAccountDocument0Field(fName string) *AccountDocument0Field {
  base := &baseAccountDocument0Field{fName}
  // 没有name时，不能做updater与filter操作，比如最顶层的Struct
  if fName == "" {
    return &AccountDocument0Field {baseAccountDocument0Field:base}
  }
  up := &AccountDocument0FieldUpdaterF{base, field.NewStructUpdaterF(fName)}
  fl := &AccountDocument0FieldFilterF{base, field.NewStructFilterF(fName)}

  return &AccountDocument0Field {base, up, fl}
}

// 对应于 bson struct 中的 inline 修饰符
func NewAccountDocument0FieldInline(fName string) *AccountDocument0Field {
  return &AccountDocument0Field {baseAccountDocument0Field: &baseAccountDocument0Field{fName}}
}

func (s *AccountDocument0Field) FullName() string {
  return s.name
}

type baseAccountDocument0Field struct {
  name      string
}

func (s *baseAccountDocument0Field) AccountID() *field.String0F {
  n := field.StructNext(s.name, "_id")
  return field.NewString0F(n)
}

func (s *baseAccountDocument0Field) Balance() *field.Int640F {
  n := field.StructNext(s.name, "Balance")
  return field.NewInt640F(n)
}

func (s *baseAccountDocument0Field) UpdateTime() *field.Uint640F {
  n := field.StructNext(s.name, "UpdateTime")
  return field.NewUint640F(n)
}

