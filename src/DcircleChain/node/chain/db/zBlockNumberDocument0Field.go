
package db

// ---- auto generated by builder.go, NOT modify this file ----

import (
  field "github.com/xpwu/go-db-mongo/mongodb/field"
)

type BlockNumberDocument0FieldUpdaterF struct {
  *baseBlockNumberDocument0Field
  *field.StructUpdaterF
}

func (s *BlockNumberDocument0FieldUpdaterF) FullName() string {
  return s.name
}

type BlockNumberDocument0FieldFilterF struct {
  *baseBlockNumberDocument0Field
  *field.StructFilterF
}

func (s *BlockNumberDocument0FieldFilterF) FullName() string {
  return s.name
}

type BlockNumberDocument0Field struct {
  *baseBlockNumberDocument0Field
  BlockNumberDocument0FieldUpdaterF  *BlockNumberDocument0FieldUpdaterF
  BlockNumberDocument0FieldFilterF   *BlockNumberDocument0FieldFilterF
}

func NewBlockNumberDocument0Field(fName string) *BlockNumberDocument0Field {
  base := &baseBlockNumberDocument0Field{fName}
  // 没有name时，不能做updater与filter操作，比如最顶层的Struct
  if fName == "" {
    return &BlockNumberDocument0Field {baseBlockNumberDocument0Field:base}
  }
  up := &BlockNumberDocument0FieldUpdaterF{base, field.NewStructUpdaterF(fName)}
  fl := &BlockNumberDocument0FieldFilterF{base, field.NewStructFilterF(fName)}

  return &BlockNumberDocument0Field {base, up, fl}
}

// 对应于 bson struct 中的 inline 修饰符
func NewBlockNumberDocument0FieldInline(fName string) *BlockNumberDocument0Field {
  return &BlockNumberDocument0Field {baseBlockNumberDocument0Field: &baseBlockNumberDocument0Field{fName}}
}

func (s *BlockNumberDocument0Field) FullName() string {
  return s.name
}

type baseBlockNumberDocument0Field struct {
  name      string
}

func (s *baseBlockNumberDocument0Field) Key() *field.String0F {
  n := field.StructNext(s.name, "_id")
  return field.NewString0F(n)
}

func (s *baseBlockNumberDocument0Field) Number() *field.Uint640F {
  n := field.StructNext(s.name, "Number")
  return field.NewUint640F(n)
}

